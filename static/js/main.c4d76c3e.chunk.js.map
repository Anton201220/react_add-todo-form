{"version":3,"sources":["api/todos.ts","components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","services/userService.ts","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","UserInfo","user","className","href","email","name","username","TodoInfo","todo","usersFromServer","find","getUserById","classNames","TodoList","todos","map","TodoForm","onAdd","generateNewId","useState","users","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","isError","trimmedTitle","trim","newTodo","noValidate","htmlFor","type","placeholder","value","onChange","target","required","disabled","App","todosFromServer","setTodos","currentTodos","Math","max","t","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4d76c3e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport getUserById from '../../services/userService';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    userId,\n    completed,\n  } = todo;\n  const user = getUserById(userId)\n  || null;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport default function getUserById(userId:number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  onAdd: (newTodo: Todo) => void;\n  generateNewId: () => number;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onAdd, generateNewId }) => {\n  const [users] = useState(usersFromServer);\n\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n\n    if (hasTitleError) {\n      setHasTitleError(false);\n    }\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n\n    if (hasUserIdError) {\n      setHasUserIdError(false);\n    }\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    let isError = false;\n\n    const trimmedTitle = title.trim();\n\n    if (!trimmedTitle) {\n      setHasTitleError(true);\n      isError = true;\n    }\n\n    if (!userId) {\n      setHasUserIdError(true);\n      isError = true;\n    }\n\n    if (!trimmedTitle && !userId) {\n      setHasTitleError(true);\n      setHasUserIdError(true);\n      isError = true;\n    }\n\n    if (isError) {\n      return;\n    }\n\n    const newTodo = {\n      id: generateNewId(),\n      title: trimmedTitle,\n      userId,\n      completed: false,\n    };\n\n    onAdd(newTodo);\n\n    resetForm();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n      noValidate\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title\">Title:&nbsp;</label>\n        <input\n          id=\"title\"\n          name=\"title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter title\"\n          value={title}\n          onChange={handleTitleChange}\n          required\n        />\n        {hasTitleError\n          && (\n            <span className=\"error\">\n            &nbsp;Please enter a title\n            </span>\n          )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user\">User:&nbsp;</label>\n        <select\n          id=\"user\"\n          name=\"userId\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {users.map(({ id, name }: User) => (\n            <option key={id} value={id}>\n              {name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError\n          && (\n            <span className=\"error\">\n            &nbsp;Please choose a user\n            </span>\n          )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n\n  const generateNewId = () => {\n    return Math.max(...todos.map((t) => t.id), 0) + 1;\n  };\n\n  const handleAddTodo = (newTodo: Todo) => {\n    setTodos((currentTodos) => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App container\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        onAdd={handleAddTodo}\n        generateNewId={generateNewId}\n      />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}